<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuTextBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA1oAAAAmCAYAAADdquq5AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAO4SURBVHhe7d2xaxtnGMDhGzNm9NixY8aMHTOVLoWOHUv/
        go4dOhS6dejQrXP/gU6xTneSbBNsh4BrClYQwahUFhdHuKorzPV7nS8UJ04iOaYF53ngHcTJ5/nHq/uu
        AAAA4H+2vr5+N83XvV5vkGanqqpJp9NpjTHGGGOMMeYmTDROtE5MtE+aezmHrle68e30T37sdrvHW1tb
        zePHj9vpdNo2TdPO5/MWAADgpojGidaJifbZ3t5uyrJc1HX9c2qjD3ImvZtUc9+mGzaj0Whxenqa/zUA
        AMD74+zsrB2Px22/329iCZWC61ZOptXkLdbmwcHBfLFY5NsDAAC8vyK4YgmVWum31ExrOZ+WE+uwwWDw
        69HRkRUWAADAS2azWWy3xqmd7uSMerPYZEVkxR8CAABwuXi0KrXTH7Goyjn1evFzQZssAACAtzs5OYnN
        1jAWVjmpXpUi6/vhcOgYQQAAgCWNx+O/U2z9krPqolRga3VdH8fDXQAAACxvY2Pj6aXPa8URhXF6Rv4e
        AAAAS5pMJm1qqvs5r55L5XWr2+0+c4w7AADA1VRVdRK/FMyZdR5a9+Jtx/k6AAAAK9rf34/Q+iJnVlGk
        8vrhyZMn+TIAAACreuXng+nDYDqd5ssAAACsKo56r6rqMGdWUdR1PfSCYgAAgKuLMy/KsvwzZ1ZRxAcH
        YQAAALybTqfT5swqivgAAADAuxFaAAAA10xoAQAAXDOhBQAAcM0uhFZZlouzs7N8CQAAgKu4EFpx1nuc
        +Q4AAMDVxPIqllg5s85fWLzTNE2+DAAAwKrm83m8sHiSM+v8hcU/HR4e5ssAAACsajqdtr1eb5AzqyjW
        19c/39vbm+XrAAAArGg4HC7KsvwmZ9Z5aN3udrt/5esAAACsaGNj42lqqzs5s57r9Xr3J5NJ/goAAADL
        ms1mbV3Xw5xX/4ryigLL3wMAAGBJDx8+jG3WJzmvLrLVAgAAWM1rt1kvpAJbGwwGoziWEAAAgDdbLBbt
        5ubm76mlPsxZdbn8E8KjeNkWAAAAr7e7uzutqurTnFNvVtf1xxFbp6en+c8BAAB4ITZZEVm9Xu/LnFHL
        ic1Wv98fN02TbwUAAEA8kxU/F1x6k/WyeGYrFdrOgwcPmrgZAADA+yrOsnj06NFxHHzx1meylpFu8lHc
        rN/vHx8cHCxiy+UZLgAA4KaL9hmNRu3W1lZTVdUktdFnOZOuT1Rbmq9iy1WW5aLT6bTGGGOMMcYYc1Mn
        2qfb7X6XOuhuziIAAAD+e0XxDyiGuT4J2ZAPAAAAAElFTkSuQmCC
</value>
  </data>
</root>