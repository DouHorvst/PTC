<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEmail.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAagAAAAnCAYAAABaI9x5AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAQUSURBVHhe7d1NaBRnHMfxOUkOHqSnHD30UHraU/HQgrSX
        9CIe9NSLxR5KQeihFA9tCcVDS31pa61oMagYqWjX3TW73d3JJtndmSRVqEKp0loiomFbNaxv1ZAUps9v
        8ySQ+LRsXnZ2we8fPgtJnn0mtx//mWeex1tpDQ8PbzZ6/SBz1g/Tl2VkZCQCADy/5vNA2aCMMLba2Ght
        mQtt0kVL5eKTzKUj9b6JHdGhyZ5o31Si4aN/PADAc2w+D5QNyojklb33h8qDs341nW1JWJlJNxbD9FD2
        4vG6Lto7vd75jwEAsNQnM+uig7XXG2Gl7spkSsLGy+qqECT35kfP1b/661XnhQEAaJa6q9x4//1ieD5p
        gqrLRs3ySl804ZTvu/7OI6Wf60IAAKzEN7ffnCmOJn8xWdNtY6e50i29Qnj+968n35hxTQwAwGp9UX85
        KoyeqzV9y6/ROZlw+vzBi84JAQBYK58+eSHKj525o8bIxtB/Vz5Ilr+svUbnBACIhRoiNUZqkGwUPVta
        EKFnTq4JAABoFTVGapBsHC0u3QPMjp+8x4IIAEA7aBm6yaJn35XSe04sJQcAtItu9fnBhQkbS3NlEmuz
        doZwfQEAgLicvrr7oV/J7bLx5HnagkJv+boGAwAQFy0994P0tUY4adVEqVJ4yrMnAEAnKIapRyabNiqg
        elI/H+T2HgCgI/Rf+/Bvk03veoPBwInDt7Y4BwEAEDct2NPCPVbvAQA6ysJzKH3oB9cgAADitudxdzRY
        zd319KEfXIMAAGgHnc7r6cP1RwAA2qURUKVK/oF2k3UNAACgHRoBpW0lOFoDANAp1DSpefL8MDV24O4r
        zkEAAMRtYU8+P8icPTTZ4xwEAEDc1DSpedJOEju+//VjzoACAHSEY3+8PVsqF/YooDaUKoVp1yAAAOKW
        G+/XuVCJxoaxfpi+vG8q4RwIAEBcFl7SnS9tyqfN+VyDAQCIy3cTb82WguwBG09zxXJzAEA7aXl5MUzd
        0aMnG01zZX6xVefBu74EAECrnfrt/celcv4DG0uLi2dRAIB20LMnP8jUTLPUZSNpcamtKoTJ22weCwCI
        S+/0+ij306k/TQa9ZOPIXRqggfqCayIAANZS8sr+qVJ1YLuNof+vYpDakh0/eY9OCgDQKmqEFE6F8If3
        bPw0V6aTSuTHztzkMEMAwFpTA5S91FdrunNaWiakunXi7umrux9yJAcAYLXUNR27vvOp1juoEbJxs/Ly
        K7ldg9WBKU3KbT8AwHKpyTlyY/usH1yo+9WBz0w4LX7XaTVlJuvSpNqCQvskaTM/LUknsAAASykblBFH
        b26LsheP13W+kx9mjq5pMLlKbZl2mtV7UwosnXwIAMA8ZYMyYqj647cmMzbZ+FhGed6/c0ROTO//9mIA
        AAAASUVORK5CYII=
</value>
  </data>
</root>